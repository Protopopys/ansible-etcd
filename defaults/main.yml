---
# Вкл/Выкл использование downloader сервера (актуально если на удаленном хосте нет доступа к сети интернет или же количество хостов на которые необходимо доставить файлы
use_downloader: true
# При использовании downloader в данную папку будет осуществлятся скачивание файлов, в дальнейшем распространение файлов на удаленные хосты осуществляется из данной папки downloader сервера.
downloader_source_folder: ~/DISTR
# Папка в которую будет осуществлена загрузка установочного архива
distribution_path: "/opt/DISTR"

# Устаноавливаемая версия
#etcd_version: v3.3.17
etcd_version: v3.4.7
# Папка на удаленном сервере куда будет осуществляться доставка архива с дальнейшей распаковкой
etcd_bin_path: /usr/local/bin
cfssl_bin_path: /usr/local/bin
# Имена устанавливаемых компонентов
etcd_bin_name:
  - etcd
  - etcdctl

# Тип установки:
## native - бинарник в хост системе
## container - бинарник в контейнере
etcd_distribution_type: native

ca_certificates_key_size: 4096
certificates_key_size: 2048
ca_certificates_duration: 87600h
certificates_duration: 26280h
#

#cert_provider: cfssl
cert_provider: ssl

# Параметры создания пользователя
etcd_manage_user: true
etcd_manage_group: true
etcd_user: etcd
etcd_group: etcd
etcd_system: true
etcd_shell: /bin/false
etcd_ssh_key: false

# Имя группы для кластера ETCD
etcd_group_name: "etcd"
# Папка для конфигурационных файлов
etcd_conf_dir: /etc/etcd
# Папка для сертификатов
etcd_cert_dir: "{{ etcd_conf_dir }}/pki"
#
etcd_access_addresses: "\
  {% for item in groups[etcd_group_name] %}\
    https://{{ hostvars[item].etcd_access_address | default(hostvars[item].etcd_address) | default(hostvars[item].advertise_ip) | default(hostvars[item].ansible_default_ipv4.address) }}:2379{% if not loop.last %},{% endif %}\
  {% endfor %}"


# ETCD available version
# ETCD доступные версии
etcd:
  v3.3.17:
    source_url: https://github.com/etcd-io/etcd/releases/download/v3.3.17/etcd-v3.3.17-linux-amd64.tar.gz
    # Контрольная сумма скачаемого архива
    checksum_algorithm: "sha256"
    archive_checksum: 8c1168a24d17a2d6772f8148ea35d4f3398c51f1e23db90c849d506adb387060
    # Контрольная сумма бинарных файлов
    etcd:
      checksum: bcaeca5a37668909ec9c6f3144cbdecf9e9ae308d6f3d2b0114d1ce79a890f26
    etcdctl:
      checksum: dd0ac971beefb8bc2b655b78851b08a9a5b717ca87ca20540237c4d17fa385d0
      # Параметр распаковки архива на удаленном сервере
    extra_opts: --strip-components=1
  v3.4.3:
    source_url: https://github.com/etcd-io/etcd/releases/download/v3.4.3/etcd-v3.4.3-linux-amd64.tar.gz
    # Контрольная сумма скачаемого архива
    checksum_algorithm: "sha256"
    archive_checksum: 6c642b723a86941b99753dff6c00b26d3b033209b15ee33325dc8e7f4cd68f07
    # Контрольная сумма бинарных файлов
    etcd:
      checksum: f0fc58ad6e4857ddbc42f97fff42ddcfad9b63e1d3a39d47c56f17d7786c60ac
    etcdctl:
      checksum: 7bf7dd410c6b69d3cfacd8b8aed2d9e0133dcc97959a41d2c347fc5f5df6c387
    # Параметр распаковки архива на удаленном сервере
    extra_opts: --strip-components=1
  v3.4.7:
    source_url: https://github.com/etcd-io/etcd/releases/download/v3.4.7/etcd-v3.4.7-linux-amd64.tar.gz
    # Контрольная сумма скачаемого архива
    checksum_algorithm: "sha256"
    archive_checksum: 4ad86e663b63feb4855e1f3a647e719d6d79cf6306410c52b7f280fa56f8eb6b
    # Контрольная сумма бинарных файлов
    etcd:
      checksum: ed5555ac2ad1d98e65f26035ec1e14bd5bc984f69a0f4ee45051f86af0e9f64c
    etcdctl:
      checksum: 42042b008b41ffa4772fc3bdae42c5e32b52e4864d9551798a26a76a30cdc669
    # Параметр распаковки архива на удаленном сервере
    extra_opts: --strip-components=1
  v3.4.13:
    source_url: https://github.com/etcd-io/etcd/releases/download/v3.4.13/etcd-v3.4.13-linux-amd64.tar.gz
    # Контрольная сумма скачаемого архива
    checksum_algorithm: "sha256"
    archive_checksum: 2ac029e47bab752dacdb7b30032f230f49e2f457cbc32e8f555c2210bb5ff107
    # Контрольная сумма бинарных файлов
    etcd:
      checksum: feec3a5b08e89e8c533b6d3f9146bdc479312d3eae056c0d7e56f2d36f771b4a
    etcdctl:
      checksum: a8f59467f6e33817771e59fdb715d42f68f54348eae53c4bb5561c0d40fd9650
    # Параметр распаковки архива на удаленном сервере
    extra_opts: --strip-components=1


### Configuration flags ###

## Member flags ##
# Human-readable name for this member
# Человекочитаемое имя члена кластера
etcd_member_name: "\
  {% for host in groups[etcd_group_name] %}\
    {% if inventory_hostname == host %}\
      {{ hostvars[host].etcd_member_name | default('etcd' + loop.index|string) }}\
    {% endif %}\
  {% endfor %}"
# Path to the data directory
# Папка для данных
etcd_data_dir: /var/lib/etcd
# Path to the dedicated wal directory. If this flag is set, etcd will write the WAL files to the walDir rather than the dataDir.
# This allows a dedicated disk to be used, and helps avoid io competition between logging and other IO operations.
etcd_wal_dir: ""
# Number of committed transactions to trigger a snapshot to disk
etcd_snapshot_count: "10000"
# Time (in milliseconds) of a heartbeat interval
etcd_heartbeat_interval: "250"
# Time (in milliseconds) for an election to timeout. See Documentation/tuning.md for details
etcd_election_timeout: "5000"
# List of URLs to listen on for peer traffic.
# This flag tells the etcd to accept incoming requests from its peers on the specified scheme://IP:port combinations.
# Scheme can be http or https.
# Alternatively, use unix://<file-path> or unixs://<file-path> for unix sockets.
# If 0.0.0.0 is specified as the IP, etcd listens to the given port on all interfaces.
# If an IP address is given as well as a port, etcd will listen on the given port and interface.
# Multiple URLs may be used to specify a number of addresses and ports to listen on.
# The etcd will respond to requests from any of the listed addresses and ports.
etcd_address: "{{ advertise_ip | default(ansible_default_ipv4.address) }}"
etcd_listen_peer_urls: "https://{{ etcd_address }}:2380"
# List of URLs to listen on for client traffic.
# This flag tells the etcd to accept incoming requests from the clients on the specified scheme://IP:port combinations.
# Scheme can be either http or https.
# Alternatively, use unix://<file-path> or unixs://<file-path> for unix sockets.
# If 0.0.0.0 is specified as the IP, etcd listens to the given port on all interfaces.
# If an IP address is given as well as a port, etcd will listen on the given port and interface.
# Multiple URLs may be used to specify a number of addresses and ports to listen on.
# The etcd will respond to requests from any of the listed addresses and ports.
etcd_listen_client_urls: "https://{{ etcd_address }}:2379,https://127.0.0.1:2379"
# Maximum number of snapshot files to retain (0 is unlimited)
etcd_max_snapshots: 5
# Maximum number of wal files to retain (0 is unlimited)
etcd_max_wals: 5
# Comma-separated white list of origins for CORS (cross-origin resource sharing).
etcd_cors: ""
# Raise alarms when backend size exceeds the given quota (0 defaults to low space quota).
etcd_quota_backend_bytes: 0
# BackendBatchLimit is the maximum operations before commit the backend transaction.
etcd_backend_batch_limit: 0
# The freelist type that etcd backend(bboltdb) uses (array and map are supported types).
etcd_backend_bbolt_freelist_type: map
# BackendBatchInterval is the maximum time before commit the backend transaction.
etcd_backend_batch_interval: 0
# Maximum number of operations permitted in a transaction.
etcd_max_txn_ops: 128
# Maximum client request size in bytes the server will accept.
etcd_max_request_bytes: 1572864
# Minimum duration interval that a client should wait before pinging server.
etcd_grpc_keepalive_min_time: 5s
# Frequency duration of server-to-client ping to check if a connection is alive (0 to disable).
etcd_grpc_keepalive_interval: 2h
# Additional duration of wait before closing a non-responsive connection (0 to disable).
etcd_grpc_keepalive_timeout: 20s


## Clustering flags ##
etcd_access_address: "{{ access_ip | default(etcd_address) }}"
# List of this member’s peer URLs to advertise to the rest of the cluster.
# These addresses are used for communicating etcd data around the cluster.
# At least one must be routable to all cluster members.
# These URLs can contain domain names.
etcd_initial_advertise_peer_urls: "https://{{ etcd_access_address }}:2380"
# Initial cluster configuration for bootstrapping.
etcd_initial_cluster: "\
{% for item in groups[etcd_group_name] %}\
  {{ hostvars[item].etcd_member_name | default('etcd' + loop.index|string) }}=https://{{ hostvars[item].etcd_access_address | default(hostvars[item].etcd_address) | default(hostvars[item].advertise_ip) | default(hostvars[item].ansible_default_ipv4.address) }}:2380{% if not loop.last %},{% endif %}\
{% endfor %}"
# Initial cluster state (“new” or “existing”).
# Set to new for all members present during initial static or DNS bootstrapping.
# If this option is set to existing, etcd will attempt to join the existing cluster.
# If the wrong value is set, etcd will attempt to start but fail safely.
etcd_initial_cluster_state: "{% if etcd_cluster_is_healthy.rc != 0 | bool %}new{% else %}existing{% endif %}"
# Initial cluster token for the etcd cluster during bootstrap.
etcd_initial_cluster_token: k8s_etcd
# List of this member’s client URLs to advertise to the rest of the cluster.
# These URLs can contain domain names.
etcd_advertise_client_urls: "https://{{ etcd_access_address }}:2379"
# Reject reconfiguration requests that would cause quorum loss.
etcd_strict_reconfig_check: true
# Auto compaction retention for mvcc key value store in hour. 
# 0 means disable auto compaction.
etcd_auto_compaction_retention: 0
# Interpret ‘auto-compaction-retention’ one of: ‘periodic’, ‘revision’. ‘periodic’ for duration based retention, defaulting to hours if no time unit is provided (e.g. ‘5m’).
# ‘revision’ for revision number based retention.
etcd_auto_compaction_mode: periodic
# Accept etcd V2 client requests
etcd_enable_v2: false


## Proxy flags ##
# Proxy mode setting (“off”, “readonly” or “on”).
etcd_proxy: "off"


## Security flags ##
# Path to the client server TLS cert file.
etcd_cert_file: "{{ etcd_cert_dir }}/server.pem"
# Path to the client server TLS key file.
etcd_key_file: "{{ etcd_cert_dir }}/server-key.pem"
# Enable client cert authentication.
etcd_client_cert_auth: true
# Path to the client certificate revocation list file.
etcd_client_crl_file: ""
# Allowed Allowed TLS name for client cert authentication.
etcd_client_cert_allowed_hostname: ""
# Path to the client server TLS trusted CA cert file.
etcd_trusted_ca_file: "{{ etcd_cert_dir }}/etcd-ca.pem"
# Client TLS using generated certificates
etcd_auto_tls: false
# Path to the peer server TLS cert file.
# This is the cert for peer-to-peer traffic, used both for server and client.
etcd_peer_cert_file: "{{ etcd_cert_dir }}/peer.pem"
# Path to the peer server TLS key file.
# This is the key for peer-to-peer traffic, used both for server and client.
etcd_peer_key_file: "{{ etcd_cert_dir }}/peer-key.pem"
# Enable peer client cert authentication.
etcd_peer_client_cert_auth: true
# Path to the peer certificate revocation list file.
etcd_peer_crl_file: ""
# Path to the peer server TLS trusted CA file.
etcd_peer_trusted_ca_file: "{{ etcd_cert_dir }}/etcd-ca.pem"
# Peer TLS using generated certificates
etcd_peer_auto_tls: false
# Allowed CommonName for inter peer authentication.
etcd_peer_cert_allowed_cn: ""
# Allowed TLS certificate name for inter peer authentication.
etcd_peer_cert_allowed_hostname: ""
# Comma-separated list of supported TLS cipher suites between server/client and peers.
etcd_cipher_suites: ""


## Logging flags ##
# Specify ‘stdout’ or ‘stderr’ to skip journald logging even when running under systemd, or list of comma separated output targets.
# ‘default’ use ‘stderr’ config for v3.4 during zap logger migraion
etcd_log_outputs: default
# Configures log level. Only supports debug, info, warn, error, panic, or fatal.
etcd_log_level: info


## Profiling flags ##
# Enable runtime profiling data via HTTP server. Address is at client URL + “/debug/pprof/”
etcd_enable_pprof: false
# Set level of detail for exported metrics, specify ‘extensive’ to include server side grpc histogram metrics.
etcd_metrics: "basic"
# List of additional URLs to listen on that will respond to both the /metrics and /health endpoints
etcd_listen_metrics_urls: ""

## A dictionary of extra environment variables to add to etcd.env, formatted like:
##  etcd_extra_vars:
##    ETCD_VAR1: "value1"
##    ETCD_VAR2: "value2"
etcd_extra_vars: {}