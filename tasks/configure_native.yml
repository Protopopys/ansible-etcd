---
# Создаем директории необходимые для работы
- name: ETCD | Creating folders
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ etcd_user }}"
    group: "{{ etcd_group }}"
    mode: u+rwx
  loop:
    - "{{ etcd_conf_dir }}"
    - "{{ etcd_cert_dir }}"
    - "{{ etcd_data_dir }}"

- name: ETCD | Copy ETCD CA signing config file
  template:
    src: "etcd-cfssl-config.json.j2"
    dest: "{{ etcd_cert_dir }}/etcd-cfssl-config.json"
    mode: "0644"
  register: etcd_ca_sign_conf
  when: "cert_provider == 'cfssl'"

- name: ETCD | Generate ETCD CA certs
  import_tasks: "generate_ca_certs.yml"
  delegate_to: "{{ groups['etcd'][0] }}"
  run_once: true

- name: ETCD | Synchronize ETCD CA certs
  import_tasks: "synchronize_ca_certs.yml"

- name: ETCD | Generate server certs
  import_tasks: "generate_server_certs.yml"

- name: ETCD | Generate peer certs
  import_tasks: "generate_peer_certs.yml"

- name: ETCD | Generate helthcheck certs
  import_tasks: "generate_helthcheck_certs.yml"

# Создаем конфигурационный файл ETCD
- name: ETCD | Creating etcd.env file
  template:
    src: "etcd.env.j2"
    dest: "{{ etcd_conf_dir }}/etcd.env"
    owner: "{{ etcd_user }}"
    group: "{{ etcd_group }}"
    backup: true
  notify: ETCD | Restart etcd

# Создаем конфигурационный файл systemd сервиса ETCD
- name: ETCD | Creating etcd.service file
  template:
    src: "etcd_{{ etcd_distribution_type }}.service.j2"
    dest: /etc/systemd/system/etcd.service
    owner: "{{ etcd_user }}"
    group: "{{ etcd_group }}"
    backup: true
  notify:
    - ETCD | Reload systemd
    - ETCD | Restart etcd

# Запускаем принудительное исполнение handlers
- name: ETCD | Flush handlers
  meta: flush_handlers

- name: ETCD | Validating if the ETCD is UP and OPENED the PORT
  wait_for:
    host: "127.0.0.1"
    port: 2379
    delay: 3
    sleep: 3
    timeout: 15
    state: started
    msg: "WebServer PORT is not Listening"

# Убеждаемся что ETCD сервис запущен и добавлен в автозапуск
- name: ETCD | Ensure ETCD is started and enabled at boot
  service:
    name: etcd
    state: started
    enabled: true
# TODO реализовать добавление и удаление членов кластера ETCD - https://etcd.io/docs/v3.4.0/op-guide/runtime-configuration/
