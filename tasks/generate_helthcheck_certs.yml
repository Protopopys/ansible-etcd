---
- name: ETCD |(when cert_provider == cfssl)
  block:
    - name: ETCD | Copy ETCD healthcheck cert config files
      template:
        src: "etcd-healthcheck-client-csr.json.j2"
        dest: "{{ etcd_cert_dir }}/etcd-healthcheck-client-csr.json"
        mode: 0644
      register: etcd_healthcheck_conf

    - name: ETCD | Check that ETCD Peer cert exists
      stat:
        path: "{{ etcd_cert_dir }}/etcd-healthcheck-client-key.pem"
      register: etcd_healthcheck_cert

    - name: ETCD | Generatting ETCD healthcheck cert
      shell: "{{ bin_path }}/cfssl gencert -ca={{ etcd_cert_dir }}/etcd-ca.pem -ca-key={{ etcd_cert_dir }}/etcd-ca-key.pem -config={{ etcd_cert_dir }}/etcd-ca-config.json -profile=client {{ etcd_cert_dir }}/etcd-healthcheck-client-csr.json | {{ bin_path }}/cfssljson -bare {{ etcd_cert_dir }}/etcd-healthcheck-client"
      when: 
        - not etcd_healthcheck_cert.stat.exists or
          etcd_healthcheck_conf.changed or
          etcd_ca_changed
  when: cert_provider == 'cfssl'

- name: ETCD |(when cert_provider == ssl)
  block:
    - name: ETCD | Generate an OpenSSL private key with the default values (4096 bits, RSA)
      openssl_privatekey:
        path: "{{ etcd_cert_dir }}/healthcheck-client.pem"
        owner: "{{ etcd_user }}"
        group: "{{ etcd_group }}"
        type: RSA
        size: "{{ certificates_key_size }}"

    - name: ETCD | Generate an OpenSSL Certificate Signing Request
      openssl_csr:
        path: "{{ etcd_cert_dir }}/healthcheck-client.csr"
        owner: "{{ etcd_user }}"
        group: "{{ etcd_group }}"
        privatekey_path: "{{ etcd_cert_dir }}/healthcheck-client.pem"
        organization_name: system:masters
        common_name: kube-etcd-healthcheck-client
        use_common_name_for_san: false
        key_usage_critical: true
        key_usage:
          - digitalSignature
          - keyEncipherment
        extended_key_usage:
          - clientAuth

    - name: Generate an OpenSSL certificate signed with your own CA certificate
      openssl_certificate:
        path: "{{ etcd_cert_dir }}/healthcheck-client.pem"
        csr_path: "{{ etcd_cert_dir }}/healthcheck-client.csr"
        ownca_path: "{{ etcd_cert_dir }}/etcd-ca.pem"
        ownca_privatekey_path: "{{ etcd_cert_dir }}/etcd-ca-key.pem"
        provider: ownca
      register: generated_etcd_server_certs
  when: cert_provider == 'ssl'